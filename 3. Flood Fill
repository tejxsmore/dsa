class Solution
{
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor)
    {
        int iniColor = image[sr][sc];
        int ans[][] = image;
        
        int drow[] = {-1, 0, 1, 0};
        int dcol[] = {0, 1, 0, -1};
        
        func(sr, sc, drow, dcol, iniColor, newColor, ans, image);
        return ans;
    }
    
    public void func(int row, int col,
    int drow[], int dcol[],
    int iniColor, int newColor,
    int ans[][], int image[][]){
        
        ans[row][col] = newColor;
        int n = image.length;
        int m = image[0].length;
        
        for(int i = 0; i < 4; i++){
            int nrow = row + drow[i];
            int ncol = col + dcol[i];
            
            if(nrow >= 0 && nrow < n && ncol >= 0 && ncol < m &&
            image[nrow][ncol] == iniColor && ans[nrow][ncol] != newColor){
                func(nrow, ncol, drow, dcol, iniColor, newColor, ans, image);
            }
        }
    }
}
