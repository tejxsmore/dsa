class Solution{
    private: 
    void func(int row, int col, vector<vector<int>>& vis, vector<vector<char>>& mat){
        vis[row][col] = 1;
        int n = mat.size();
        int m = mat[0].size();
        
        int drow[] = {-1, 0, 1, 0};
        int dcol[] = {0, 1, 0, -1};
        
        for(int i = 0; i<4; i++){
            int nrow = row+drow[i];
            int ncol = col+dcol[i];
            
            if(nrow >= 0 && nrow < n && ncol >= 0 && ncol < m &&
            !vis[nrow][ncol] && mat[nrow][ncol] == 'O'){
                func(nrow, ncol, vis, mat);
            }
        }
    }
public:
    vector<vector<char>> fill(int n, int m, vector<vector<char>>& mat)
    {
        vector<vector<int>> vis(n, vector<int>(m, 0));
        
        for(int j = 0; j < m; j++){
            if(!vis[0][j] && mat[0][j] == 'O'){
                func(0, j, vis, mat);
            }
            if(!vis[n-1][j] && mat[n-1][j] == 'O'){
                func(n-1, j, vis, mat);
            }
        }
        for(int i = 0; i < n; i++){
            if(!vis[i][0] && mat[i][0] == 'O'){
                func(i, 0, vis, mat);
            }
            if(!vis[i][m-1] && mat[i][m-1] == 'O'){
                func(i, m-1, vis, mat);
            }
        }
        
        for(int i = 0; i < n; i++){
            for(int j = 0; j < m; j++){
                if(!vis[i][j] && mat[i][j] == 'O'){
                    mat[i][j] == 'X';
                }
            }
        }
        return mat;
    }
};
